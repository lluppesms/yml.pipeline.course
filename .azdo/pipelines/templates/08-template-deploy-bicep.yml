# ------------------------------------------------------------------------------------------------------------------------
# 6. Reusable template to deploy a Bicep File using variables from a file merged into a parameters file
# ------------------------------------------------------------------------------------------------------------------------
parameters:
- name: environmentName
  default:  'DEMO'
- name: bicepPath
  default: 'infra/bicep'
- name: bicepFile
  default: 'main.bicep'
- name: parameterFile
  default: 'main.bicepparam' # or 'main.parameters.json'

stages:
  - stage: DeployBicepStage
    displayName: Deploy Resources
    jobs:
    - job:
      displayName: Deploy Bicep

      variables:
        - template: ../vars/var-common-08.yml
        - name: bicepFilePath
          value: '$(Build.SourcesDirectory)/${{ parameters.bicepPath }}/${{ parameters.bicepFile }}'
        - name: parameterFilePath
          value: '$(Build.SourcesDirectory)/${{ parameters.bicepPath }}/${{ parameters.parameterFile }}'
        - name: environmentName
          value: ${{ parameters.environmentName }}
        - name: environmentNameUpper
          value: ${{ upper(parameters.environmentName) }}
        - name: environmentNameLower
          value: ${{ lower(parameters.environmentName) }}

      steps:
        - bash: |
            resourceGroupName=$(echo "$(resourceGroupPrefix)_$(environmentNameLower)" | tr '[:upper:]' '[:lower:]')
            echo "resourceGroupName=$resourceGroupName"
            echo "##vso[task.setvariable variable=resourceGroupName]$resourceGroupName"
            
            runDateTime=$(echo $(date '+%Y%m%d-%H%M%S'))
            echo "##vso[task.setvariable variable=runDateTime]$runDateTime"
            echo "runDateTime=$runDateTime"
                                        
            runDateTimeZ=$(echo $(date '+%Y%m%dT%H%M%SZ'))
            echo "##vso[task.setvariable variable=runDateTimeZ]$runDateTimeZ"
            echo "runDateTimeZ=$runDateTimeZ"
          displayName: 'Create Variables'
          continueOnError: true

        - task: Bash@3
          displayName: 'Display Variables'
          continueOnError: true
          inputs:
            targetType: 'inline'
            script: 'env | sort'
              
        - task: CmdLine@2
          displayName: 'Display Files'
          inputs:
            script: |
              echo "Tree and files in pipeline workspace:"
              tree $(Pipeline.Workspace)
          continueOnError: true

        - task: qetza.replacetokens.replacetokens-task.replacetokens@6
          displayName: 'Update Parameter File'
          inputs:
            targetFiles: $(parameterFilePath)
            tokenPrefix: '#{'
            tokenSuffix: '}#'

        - task: CmdLine@2
          displayName: Display Parameter File Contents
          continueOnError: true
          inputs:
            script: |
              echo "Bicep File Name: $(bicepFilePath)"
              echo "Parameter File Name: $(parameterFilePath)"
              cat  $(parameterFilePath)

        - task: AzureCLI@2
          displayName: 'Create Resource Group'
          inputs:
            azureSubscription: $(azureServiceConnection)
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: az group create --name $(resourceGroupName) --location $(location) --tags LastDeployed=$(runDateTime) Application=$(appName) Environment=$(environmentNameUpper)

        - task: AzureResourceManagerTemplateDeployment@3
          displayName: 'Deploy Resources'
          inputs:
            azureResourceManagerConnection: $(azureServiceConnection)
            resourceGroupName: $(resourceGroupName)
            location: $(location)
            csmFile: $(bicepFilePath)
            csmParametersFile: $(parameterFilePath)

        - task: CmdLine@2
          inputs:
            script: |
              echo "WIPED!" > $(parameterFilePath)
          displayName: 'Wipe Parameter File'
          condition: always()
          continueOnError: true
